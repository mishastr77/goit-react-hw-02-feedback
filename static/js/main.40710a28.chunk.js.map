{"version":3,"sources":["components/Conteiner/container.module.css","components/Conteiner/Container.js","components/Sections/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/FeedbackStats/FeedbackStats.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","title","FeedbackOptions","onChangeStats","ButtonGroup","variant","color","aria-label","size","Button","name","onClick","e","currentTarget","FeedbackStats","stats","good","neutral","bad","total","positiveFeedback","Notification","message","App","state","handleChangeStats","setState","prev","getTotal","getPositiveFeedback","Math","ceil","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,UAAY,+B,wOCOfC,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKC,UAAWC,IAAOC,UAAvB,SAAmCH,K,gBCQtBI,G,MATC,SAAC,GAAyB,IAAvBJ,EAAsB,EAAtBA,SAAUK,EAAY,EAAZA,MAC3B,OACE,gCACE,6BAAKA,IACJL,OC2BQM,EA7BS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACzB,OACE,cAAC,EAAD,CAASF,MAAM,wBAAf,SACE,eAACG,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,aAAW,iCACXC,KAAK,QAJP,UAME,cAACC,EAAA,EAAD,CACEC,KAAK,OACLC,QAAS,SAACC,GAAD,OAAOT,EAAcS,EAAEC,cAAcH,OAFhD,kBAMA,cAACD,EAAA,EAAD,CACEC,KAAK,UACLC,QAAS,SAACC,GAAD,OAAOT,EAAcS,EAAEC,cAAcH,OAFhD,qBAMA,cAACD,EAAA,EAAD,CAAQC,KAAK,MAAMC,QAAS,SAACC,GAAD,OAAOT,EAAcS,EAAEC,cAAcH,OAAjE,uBCJOI,G,MAlBO,SAAC,GAIhB,IAAD,IAHJC,MAASC,EAGL,EAHKA,KAAMC,EAGX,EAHWA,QAASC,EAGpB,EAHoBA,IACxBC,EAEI,EAFJA,MACAC,EACI,EADJA,iBAEA,OACE,cAAC,EAAD,CAASnB,MAAM,aAAf,SACE,gCACE,uCAAUe,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,YCXhBC,G,MAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,6BAAKA,MC6C5BC,E,4MA1CbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,kBAAoB,SAACf,GACnB,EAAKgB,UAAS,SAACC,GAAD,sBACXjB,EAAOiB,EAAKjB,GAAQ,O,EAIzBkB,SAAW,WACT,MAA+B,EAAKJ,MACpC,OADA,EAAQR,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBW,oBAAsB,WACpB,IAAQb,EAAS,EAAKQ,MAAdR,KACR,OAAOA,EAAOc,KAAKC,KAAMf,EAAO,EAAKY,WAAc,KAAO,IAAM,M,4CAGlE,WACE,OACE,mCACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAiBzB,cAAe6B,KAAKP,oBAClCO,KAAKJ,WACN,cAAC,EAAD,CACEb,MAAOiB,KAAKR,MACZL,MAAOa,KAAKJ,WACZR,iBAAkBY,KAAKH,wBAGzB,cAAC,EAAD,CAAcP,QAAQ,+B,GAnChBW,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.40710a28.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3JihV\"};","import React from \"react\";\r\nimport styles from \"./container.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./sections.module.css\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.object.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Section from \"../Sections\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ onChangeStats }) => {\r\n  return (\r\n    <Section title=\"Please leave feedback\">\r\n      <ButtonGroup\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        aria-label=\"contained primary button group\"\r\n        size=\"large\"\r\n      >\r\n        <Button\r\n          name=\"good\"\r\n          onClick={(e) => onChangeStats(e.currentTarget.name)}\r\n        >\r\n          good\r\n        </Button>\r\n        <Button\r\n          name=\"neutral\"\r\n          onClick={(e) => onChangeStats(e.currentTarget.name)}\r\n        >\r\n          neutral\r\n        </Button>\r\n        <Button name=\"bad\" onClick={(e) => onChangeStats(e.currentTarget.name)}>\r\n          bad\r\n        </Button>\r\n      </ButtonGroup>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  onChangeStats: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport Section from \"../Sections\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./feedbackStats.module.css\";\r\n\r\nconst FeedbackStats = ({\r\n  stats: { good, neutral, bad },\r\n  total,\r\n  positiveFeedback,\r\n}) => {\r\n  return (\r\n    <Section title=\"Statistics\">\r\n      <div>\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n        <p>Total: {total}</p>\r\n        <p>Positive feedback: {positiveFeedback}</p>\r\n      </div>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default FeedbackStats;\r\n\r\nFeedbackStats.propTypes = {\r\n  stats: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedback: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./notification.module.css\";\r\n\r\nconst Notification = ({ message }) => <h3>{message}</h3>;\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport Container from \"./components/Conteiner\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport FeedbackStats from \"./components/FeedbackStats\";\nimport Notification from \"./components/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleChangeStats = (name) => {\n    this.setState((prev) => ({\n      [name]: prev[name] + 1,\n    }));\n  };\n\n  getTotal = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  getPositiveFeedback = () => {\n    const { good } = this.state;\n    return good ? Math.ceil((good / this.getTotal()) * 100) + \"%\" : \"0%\";\n  };\n\n  render() {\n    return (\n      <>\n        <Container>\n          <FeedbackOptions onChangeStats={this.handleChangeStats} />\n          {!!this.getTotal() ? (\n            <FeedbackStats\n              stats={this.state}\n              total={this.getTotal()}\n              positiveFeedback={this.getPositiveFeedback()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}